import React from 'react';
import axios from 'axios';
import Outputters from './Outputters.js';
import './cisco-atomic-ui.scss';

class Form extends React.Component {

  constructor(props) {
    super(props);
    this.state = {value: '', configData: ''};
    this.handleChange = this.handleChange.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
    this.getConfig = this.getConfig.bind(this);
  }

  getConfig()  {
    try {
      return axios({
        method: "get",
        url: "/api/loadconfig/",
        headers: { "accept": "application/json", "Access-Control-Allow-Origin": "*"}
      }).then((response) => {
        alert(response.data)
        this.setState = ({ configData: response.data}); 
    });
    } catch(error) {
      console.log(error)
    }
  }
  componentDidMount() {
    try {
      return axios({
        method: "get",
        url: "/api/loadconfig/",
        headers: { "accept": "application/json", "Access-Control-Allow-Origin": "*"}
      }).then((response) => {
        alert(response.data)
        this.setState = ({ configData: response.data}); 
    });
    } catch(error) {
      console.log(error)
    }
    alert('hi')
  }

  handleChange(event) {    this.setState({file: event.target.files[0]});  }

  handleSubmit(event) {
    const formData = new FormData();
    formData.append("file", this.state.file);
    try {
      axios({
        method: "post",
        url: "/api/uploadfile/",
        data: formData,
        headers: { "Content-Type": "multipart/form-data", "Access-Control-Allow-Origin": "*", "content": "application/json"},
      });
    } catch(error) {
      console.log(error)
    }
    alert('A name was submitted: ' + this.state.file);
    event.preventDefault();
  }

  render() {
    return (
      <body class="atomic-ui-root">
        <div class="banner">
          <div class="form-group">
            <form onSubmit={this.handleSubmit}>
              <label class="label">
                FMC URL: <p>{this.state.configData.packetEncoding}</p>
              </label>
              <label class="label">
                FMC Certificate: 
                <input type="file" onChange={this.getConfig} />
              </label>
              <label>
              </label>
              <label class="switch">
                <input class="switch__input" type="checkbox" name="connections" checked=""/>
                  <span class="switch__box"></span>
                  <span class="switch__label">Enable Connection Events?</span>
              </label>  
              <input type="submit" class="btn btn--primary" value="Submit" />
            </form>
          </div>
          <div>
            <Outputters />
          </div>
        </div>
      </body>
    );
  }
}

export default Form;
